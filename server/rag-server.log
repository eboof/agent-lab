INFO:     Started server process [41449]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
/Users/rob/dev/agent-lab/server/api.py:57: LangChainDeprecationWarning: The class `Chroma` was deprecated in LangChain 0.2.9 and will be removed in 1.0. An updated version of the class exists in the langchain-chroma package and should be used instead. To use it run `pip install -U langchain-chroma` and import as `from langchain_chroma import Chroma`.
  db = Chroma(persist_directory=db_path, embedding_function=embeddings)
Failed to send telemetry event ClientStartEvent: capture() takes 1 positional argument but 3 were given
Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
Failed to send telemetry event CollectionQueryEvent: capture() takes 1 positional argument but 3 were given
Hardware accelerator e.g. GPU is available in the environment, but no `device` argument is passed to the `Pipeline` object. Model will be on CPU.
Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.
Both `max_new_tokens` (=150) and `max_length`(=512) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)
âœ… Vector database loaded from /Users/rob/dev/agent-lab/server/db
INFO:     127.0.0.1:64406 - "POST /query HTTP/1.1" 200 OK
INFO:     127.0.0.1:64436 - "GET /health HTTP/1.1" 200 OK
Both `max_new_tokens` (=150) and `max_length`(=512) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)
INFO:     127.0.0.1:64436 - "POST /query HTTP/1.1" 200 OK
INFO:     127.0.0.1:64464 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64464 - "POST /query HTTP/1.1" 200 OK
INFO:     127.0.0.1:64502 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64502 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64506 - "GET /health HTTP/1.1" 200 OK
Hardware accelerator e.g. GPU is available in the environment, but no `device` argument is passed to the `Pipeline` object. Model will be on CPU.
Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.
Both `max_new_tokens` (=150) and `max_length`(=512) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)
INFO:     127.0.0.1:64506 - "POST /query HTTP/1.1" 200 OK
INFO:     127.0.0.1:64521 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:64521 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65151 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65151 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65151 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:65151 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49419 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49419 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49419 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:49419 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50303 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50303 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50303 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:50303 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51715 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51715 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51715 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51715 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51924 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51924 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51924 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:51924 - "GET /health HTTP/1.1" 200 OK
